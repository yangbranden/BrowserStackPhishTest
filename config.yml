browserstack_runner:
  build_name: "iOS" # Name for the browserstack build
  test_script: "./src/browserstack/tests/phish-test.py" # Test script to run
  urls_file: "./urls/latest.yml" # Phishing URLs to test on the devices 
  targets_src: "./src/browserstack/targets/ios" # Either the single file or directory of files containing the list of devices/configurations to test on
  interrupted: False
  continue_point: "0.yml" # If the test was interrupted (specify in above boolean), can continue from a specific file
  target_generator:
    targets_directory: "./src/browserstack/targets"
    output_as_file: False # Can either output as a single file (True) or collection of files in directory (False)
    custom_outfile: null # If outputting as single file, can specify custom file name (otherwise null)
    browser_versions_file: "./src/browserstack/targets/browser_versions.yml" # File containing desktop browser versions to limit the test to
    entries_per_file: 6 # My limit with 1 parallel thread is 6 (1 + 5 queued); see https://www.browserstack.com/docs/automate/selenium/queue-tests
  output_analyzer:
    output_directory: "./output_data"

phishtank_fetcher:
  urls_directory: "./urls"
  source_csv: './urls/online-valid.csv'
  num_urls: 10 # Number of URLs to fetch from phishtank (argparse argument has precedence over this value)

cve_searcher:
  cves_directory: "./src/cve_searcher/cves"