import requests
import os
import json
import yaml
from enum import Enum

class Output(Enum):
    ALL = 0
    ANDROID = 1
    IOS = 2
    WINDOWS = 3
    MACOSX = 4

OUTPUT_MODE = Output.MACOSX

if OUTPUT_MODE == Output.ALL:
    output_dir = "./targets/all_targets"
elif OUTPUT_MODE == Output.ANDROID:
    output_dir = "./targets/android"
elif OUTPUT_MODE == Output.IOS:
    output_dir = "./targets/ios"
elif OUTPUT_MODE == Output.WINDOWS:
    output_dir = "./targets/windows"
elif OUTPUT_MODE == Output.MACOSX:
    output_dir = "./targets/macosx"

# OK WAIT I didn't realize this API was available
s = requests.Session()
s.auth = (os.environ.get("BROWSERSTACK_USERNAME"), os.environ.get("BROWSERSTACK_ACCESS_KEY"))

r = s.get("https://api.browserstack.com/automate/browsers.json")
output = json.loads(r.text)

selective_output = []

# Quick fix: fields cannot have value of null (skip if null)
for item in output:
    null_fields = [field for field in item if item[field] is None]
    for n in null_fields:
        item.pop(n)

if OUTPUT_MODE == Output.ANDROID:
    for item in output:
        if item["os"] == "android":
            selective_output.append(item)
    output = selective_output
elif OUTPUT_MODE == Output.IOS:
    for item in output:
        if item["os"] == "ios":
            selective_output.append(item)
    output = selective_output
elif OUTPUT_MODE == Output.WINDOWS:
    for item in output:
        if item["os"] == "Windows":
            selective_output.append(item)
    output = selective_output
elif OUTPUT_MODE == Output.MACOSX:
    for item in output:
        if item["os"] == "OS X":
            selective_output.append(item)
    output = selective_output

# create the output directory; if it already exists, remove
if os.path.exists(output_dir):
    for root, dirs, files in os.walk(output_dir, topdown=False):
        for file in files:
            os.remove(os.path.join(root, file))
        for dir in dirs:
            os.rmdir(os.path.join(root, dir))
    os.rmdir(output_dir)
os.makedirs(output_dir)

# 6 entries per file
entries_per_file = 6
for i in range(0, len(output), entries_per_file):
    batch = output[i:i+entries_per_file]
    file_index = i // entries_per_file
    with open(f"{output_dir}/{file_index}.yml", "w") as f:
        f.write("# =======================================\n")
        f.write("# FILE GENERATED BY generate_targets.py\n")
        f.write("# =======================================\n")
        yaml.dump(batch, f, default_flow_style=False)